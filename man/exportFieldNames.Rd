% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/exportFieldNames.R
\name{exportFieldNames}
\alias{exportFieldNames}
\alias{exportFieldNames.redcapApiConnection}
\alias{exportFieldNames.redcapDbConnection}
\title{Export the Export Field Names for a Project}
\usage{
exportFieldNames(rcon, ...)

\method{exportFieldNames}{redcapDbConnection}(rcon, field = NULL,
  proj = NULL, ...)

\method{exportFieldNames}{redcapApiConnection}(rcon, field = NULL,
  proj = NULL, ...)
}
\arguments{
\item{rcon}{A REDCap connection object as generated by
\code{redcapConnection}.}

\item{...}{Arguments to be passed to other methods.}

\item{field}{Field name to be returned.  If \code{NULL}, all fields are
returned.}

\item{proj}{A \code{redcapProject} object as created by
\code{redcapProjectInfo}.}
}
\value{
A data frame containing the following fields: "original_field_name",
"choice_value", and "export_field_name". The choice_value field
represents the raw coded value for a checkbox choice. For non-checkbox
fields, the choice_value attribute will always be blank/empty. The
export_field_name attribute represents the export/import-specific version of
that field name.
}
\description{
Retrieve a data frame giving the original (as defined in REDCap)
field name, choice values (for checkboxes), and the export field name.
}
\details{
From the REDCap API Documentation:

This function returns a list of the export/import-specific version of field
names for all fields (or for one field, if desired) in a project. This is
mostly used for checkbox fields because during data exports and data imports,
checkbox fields have a different variable name used than the exact one
defined for them in the Online Designer and Data Dictionary, in which
\emph{each checkbox option} gets represented as its own export field name in
the following format: field_name + triple underscore + converted coded value
for the choice. For non-checkbox fields, the export field name will be
exactly the same as the original field name. Note: The following field types
will be automatically removed from the list returned by this method since
they cannot be utilized during the data import process: "calc", "file", and
"descriptive".
}
\examples{
\dontrun{
> #*** Note: I cannot provide working examples without
> #*** compromising security.  Instead, I will try to
> #*** offer up sample code with the matching results
>
>
> #*** Create the connection object
> rcon <- redcapConnection(url=[YOUR_REDCAP_URL], token=[API_TOKEN])
>
> exportFieldNames(rcon)
> #*** Note: I cannot provide working examples without
> #*** compromising security.  Instead, I will try to
> #*** offer up sample code with the matching results
>
>
> #*** Create the connection object
> rcon <- redcapConnection(url=[YOUR_REDCAP_URL], token=[API_TOKEN])
>
> exportFieldNames(rcon)
original_field_name choice_value export_field_name
1                chk1            1          chk1___1
2                chk1            2          chk1___2
3                chk1            3          chk1___3
}
}
\author{
Stephen Lane
}
\references{
Please refer to your institution's API documentation
(https://YOUR_REDCAP_URL/redcap/api/help)

Additional details on API parameters are found on the package wiki at
\url{https://github.com/nutterb/redcapAPI/wiki/REDCap-API-Parameters}
}

